name: CI/CD

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  NODE_VERSION: '20.17.0'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install Dependencies
      run: yarn install --frozen-lockfile

    - name: Code Linting
      run: yarn run lint

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install Dependencies
      run: yarn install --frozen-lockfile

    - name: Unit Testing
      run: yarn run test

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install Dependencies
      run: yarn install --frozen-lockfile

    - name: Building
      run: yarn run build

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist

  release:
    needs: [lint, test, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Check Alpha Release
        id: check-alpha
        run: |
          if [[ ${{ github.ref }} == *"alpha"* ]]; then
            echo "is_alpha=true" >> $GITHUB_OUTPUT
          else
            echo "is_alpha=false" >> $GITHUB_OUTPUT
          fi

      - name: Release
        uses: comnoco/create-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          prerelease: ${{ steps.check-alpha.outputs.is_alpha }}
